plugins {
    id 'fabric-loom' version '0.8-SNAPSHOT'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

group = 'com.refinedmods.refinedstorage2'
archivesBaseName = 'refinedstorage2-fabric'
version = '2.0.0-milestone.1.2'

if (System.getenv('GITHUB_SHA') != null) {
    version += '+' + System.getenv('GITHUB_SHA').substring(0, 7)
}

repositories {
    mavenCentral()
    // Required for libblockattributes
    maven {
        name = 'BuildCraft'
        url = 'https://mod-buildcraft.com/maven'
        content {
            includeGroup 'alexiil.mc.lib'
        }
    }
    maven {
        url 'https://maven.blamejared.com'
    }
    maven {
        url 'https://maven.terraformersmc.com/'
    }
    maven {
        url 'https://maven.shedaniel.me/'
    }
}

dependencies {
    minecraft 'com.mojang:minecraft:1.17.1'
    mappings 'net.fabricmc:yarn:1.17.1+build.14:v2'
    modImplementation 'net.fabricmc:fabric-loader:0.11.6'
    modImplementation 'net.fabricmc.fabric-api:fabric-api:0.37.0+1.17'

    implementation project(':core')
    include project(':core')

    modImplementation 'alexiil.mc.lib:libblockattributes-all:0.9.0'
    include 'alexiil.mc.lib:libblockattributes-all:0.9.0'

    modApi('me.sargunvohra.mcmods:autoconfig1u:3.3.1') {
        exclude(group: 'net.fabricmc.fabric-api')
    }
    include 'me.sargunvohra.mcmods:autoconfig1u:3.3.1'

    modApi('me.shedaniel.cloth:cloth-config-fabric:5.0.38') {
        exclude(group: 'net.fabricmc.fabric-api')
    }

    modApi('teamreborn:energy:0.1.1') {
        exclude(group: 'net.fabricmc.fabric-api')
    }
    include 'teamreborn:energy:0.1.1'

    modCompileOnly 'me.shedaniel:RoughlyEnoughItems-api:6.0.267-alpha'
    modRuntime 'me.shedaniel:RoughlyEnoughItems-fabric:6.0.267-alpha'
    modImplementation 'com.terraformersmc:modmenu:2.0.4'
    modImplementation 'vazkii.patchouli:Patchouli:1.17.1-55-FABRIC-SNAPSHOT'
}

loom {
    accessWidener = file("src/main/resources/refinedstorage2.accesswidener")
}

test {
    useJUnitPlatform()
}

sourceSets {
    main.resources.srcDirs += 'src/generated/resources'
}

processResources {
    inputs.property 'version', project.version

    filesMatching('fabric.mod.json') {
        expand 'version': project.version
    }
    filesMatching('data/refinedstorage2/patchouli_books/book/book.json') {
        expand 'version': project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = 'UTF-8'
    it.options.release = 16
}

java {
    withSourcesJar()
}

jar {
    from '../LICENSE.md'
    baseName 'refinedstorage2-fabric'
}
